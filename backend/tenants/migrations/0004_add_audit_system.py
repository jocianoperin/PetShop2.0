# Generated by Django 5.2.3 on 2025-07-16 18:43

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tenants', '0003_add_encryption_system'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tenant_id', models.UUIDField(db_index=True, verbose_name='ID do Tenant')),
                ('user_id', models.UUIDField(blank=True, db_index=True, null=True, verbose_name='ID do Usuário')),
                ('user_email', models.EmailField(blank=True, max_length=254, verbose_name='Email do Usuário')),
                ('event_type', models.CharField(choices=[('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('CREATE', 'Criação'), ('READ', 'Leitura'), ('UPDATE', 'Atualização'), ('DELETE', 'Exclusão'), ('EXPORT', 'Exportação'), ('IMPORT', 'Importação'), ('PERMISSION_CHANGE', 'Alteração de Permissão'), ('DATA_ACCESS', 'Acesso a Dados'), ('LGPD_REQUEST', 'Solicitação LGPD'), ('LGPD_DELETION', 'Exclusão LGPD'), ('LGPD_EXPORT', 'Exportação LGPD'), ('CONSENT_CHANGE', 'Alteração de Consentimento'), ('SECURITY_EVENT', 'Evento de Segurança')], max_length=50, verbose_name='Tipo de Evento')),
                ('resource_type', models.CharField(max_length=100, verbose_name='Tipo de Recurso')),
                ('resource_id', models.CharField(blank=True, max_length=100, verbose_name='ID do Recurso')),
                ('action', models.CharField(max_length=100, verbose_name='Ação')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Endereço IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('request_method', models.CharField(blank=True, max_length=10, verbose_name='Método HTTP')),
                ('request_path', models.CharField(blank=True, max_length=500, verbose_name='Caminho da Requisição')),
                ('old_values', models.JSONField(blank=True, null=True, verbose_name='Valores Anteriores')),
                ('new_values', models.JSONField(blank=True, null=True, verbose_name='Novos Valores')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadados')),
                ('success', models.BooleanField(default=True, verbose_name='Sucesso')),
                ('error_message', models.TextField(blank=True, verbose_name='Mensagem de Erro')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Data/Hora')),
                ('is_sensitive_data', models.BooleanField(default=False, verbose_name='Dados Sensíveis')),
                ('retention_period', models.IntegerField(default=2555, verbose_name='Período de Retenção (dias)')),
            ],
            options={
                'verbose_name': 'Log de Auditoria',
                'verbose_name_plural': 'Logs de Auditoria',
                'db_table': 'audit_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['tenant_id', 'timestamp'], name='audit_logs_tenant__eb751d_idx'), models.Index(fields=['user_id', 'timestamp'], name='audit_logs_user_id_88267f_idx'), models.Index(fields=['event_type', 'timestamp'], name='audit_logs_event_t_222f56_idx'), models.Index(fields=['resource_type', 'resource_id'], name='audit_logs_resourc_bda8a6_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataChangeLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tenant_id', models.UUIDField(db_index=True, verbose_name='ID do Tenant')),
                ('table_name', models.CharField(max_length=100, verbose_name='Nome da Tabela')),
                ('record_id', models.CharField(max_length=100, verbose_name='ID do Registro')),
                ('field_name', models.CharField(max_length=100, verbose_name='Nome do Campo')),
                ('old_value', models.TextField(blank=True, verbose_name='Valor Anterior')),
                ('new_value', models.TextField(blank=True, verbose_name='Novo Valor')),
                ('changed_by', models.UUIDField(verbose_name='Alterado Por')),
                ('changed_at', models.DateTimeField(auto_now_add=True, verbose_name='Alterado em')),
                ('change_reason', models.CharField(blank=True, max_length=255, verbose_name='Motivo da Alteração')),
                ('is_personal_data', models.BooleanField(default=False, verbose_name='Dados Pessoais')),
                ('is_sensitive_data', models.BooleanField(default=False, verbose_name='Dados Sensíveis')),
                ('data_category', models.CharField(blank=True, max_length=100, verbose_name='Categoria dos Dados')),
            ],
            options={
                'verbose_name': 'Log de Alteração de Dados',
                'verbose_name_plural': 'Logs de Alteração de Dados',
                'db_table': 'data_change_logs',
                'ordering': ['-changed_at'],
                'indexes': [models.Index(fields=['tenant_id', 'changed_at'], name='data_change_tenant__f05e43_idx'), models.Index(fields=['table_name', 'record_id'], name='data_change_table_n_c625f3_idx'), models.Index(fields=['changed_by'], name='data_change_changed_86da73_idx')],
            },
        ),
        migrations.CreateModel(
            name='LGPDRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tenant_id', models.UUIDField(db_index=True, verbose_name='ID do Tenant')),
                ('requester_name', models.CharField(max_length=255, verbose_name='Nome do Solicitante')),
                ('requester_email', models.EmailField(max_length=254, verbose_name='Email do Solicitante')),
                ('requester_document', models.CharField(blank=True, max_length=20, verbose_name='Documento do Solicitante')),
                ('request_type', models.CharField(choices=[('ACCESS', 'Acesso aos Dados'), ('RECTIFICATION', 'Retificação'), ('DELETION', 'Exclusão'), ('PORTABILITY', 'Portabilidade'), ('OBJECTION', 'Oposição'), ('CONSENT_WITHDRAWAL', 'Retirada de Consentimento')], max_length=50, verbose_name='Tipo de Solicitação')),
                ('description', models.TextField(verbose_name='Descrição da Solicitação')),
                ('affected_data_types', models.JSONField(default=list, help_text='Lista dos tipos de dados pessoais afetados', verbose_name='Tipos de Dados Afetados')),
                ('status', models.CharField(choices=[('PENDING', 'Pendente'), ('IN_PROGRESS', 'Em Andamento'), ('COMPLETED', 'Concluída'), ('REJECTED', 'Rejeitada'), ('CANCELLED', 'Cancelada')], default='PENDING', max_length=20, verbose_name='Status')),
                ('assigned_to', models.UUIDField(blank=True, null=True, verbose_name='Atribuído Para')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('due_date', models.DateTimeField(verbose_name='Data Limite')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Concluído em')),
                ('response_data', models.JSONField(blank=True, null=True, verbose_name='Dados de Resposta')),
                ('rejection_reason', models.TextField(blank=True, verbose_name='Motivo da Rejeição')),
                ('processing_log', models.JSONField(default=list, verbose_name='Log de Processamento')),
            ],
            options={
                'verbose_name': 'Solicitação LGPD',
                'verbose_name_plural': 'Solicitações LGPD',
                'db_table': 'lgpd_requests',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['tenant_id', 'status'], name='lgpd_reques_tenant__0602d8_idx'), models.Index(fields=['requester_email'], name='lgpd_reques_request_cb82c2_idx'), models.Index(fields=['due_date'], name='lgpd_reques_due_dat_0bb9aa_idx')],
            },
        ),
    ]
