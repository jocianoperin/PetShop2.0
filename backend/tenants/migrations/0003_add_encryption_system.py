# Generated by Django 5.2.3 on 2025-07-16 17:33

import django.db.models.deletion
import tenants.encrypted_fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tenants', '0002_tenantconfiguration_config_type_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsentRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_subject_type', models.CharField(choices=[('cliente', 'Cliente'), ('animal', 'Animal'), ('usuario', 'Usuário')], max_length=20)),
                ('data_subject_id', models.CharField(max_length=255)),
                ('purpose', models.TextField(help_text='Finalidade do processamento')),
                ('data_categories', models.JSONField(default=list, help_text='Categorias de dados pessoais')),
                ('processing_activities', models.JSONField(default=list, help_text='Atividades de processamento')),
                ('consent_given', models.BooleanField(default=False)),
                ('consent_type', models.CharField(choices=[('explicit', 'Explícito'), ('implicit', 'Implícito'), ('legitimate', 'Interesse Legítimo')], max_length=20)),
                ('given_at', models.DateTimeField(blank=True, null=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('given_by', models.CharField(blank=True, max_length=255)),
                ('revoked_by', models.CharField(blank=True, max_length=255)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(blank=True, help_text='Tenant ao qual este registro pertence', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='tenants.tenant', verbose_name='Tenant')),
            ],
            options={
                'verbose_name': 'Registro de Consentimento',
                'verbose_name_plural': 'Registros de Consentimento',
                'db_table': 'consent_record',
                'unique_together': {('tenant', 'data_subject_type', 'data_subject_id', 'purpose')},
            },
        ),
        migrations.CreateModel(
            name='DataProcessingLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.CharField(blank=True, max_length=255)),
                ('model_name', models.CharField(max_length=100)),
                ('field_name', models.CharField(max_length=100)),
                ('record_id', models.CharField(max_length=255)),
                ('operation', models.CharField(choices=[('read', 'Leitura'), ('write', 'Escrita'), ('update', 'Atualização'), ('delete', 'Exclusão'), ('access', 'Acesso'), ('export', 'Exportação')], max_length=20)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('legal_basis', models.CharField(choices=[('consent', 'Consentimento'), ('contract', 'Execução de Contrato'), ('legal_obligation', 'Obrigação Legal'), ('vital_interests', 'Interesses Vitais'), ('public_task', 'Tarefa Pública'), ('legitimate_interests', 'Interesses Legítimos')], default='consent', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(blank=True, help_text='Tenant ao qual este registro pertence', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='tenants.tenant', verbose_name='Tenant')),
            ],
            options={
                'verbose_name': 'Log de Processamento de Dados',
                'verbose_name_plural': 'Logs de Processamento de Dados',
                'db_table': 'data_processing_log',
                'indexes': [models.Index(fields=['tenant', 'timestamp'], name='data_proces_tenant__f7204f_idx'), models.Index(fields=['tenant', 'user_id', 'timestamp'], name='data_proces_tenant__f540d4_idx'), models.Index(fields=['tenant', 'model_name', 'operation'], name='data_proces_tenant__699141_idx')],
            },
        ),
        migrations.CreateModel(
            name='EncryptedAnimalData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('animal_id', models.IntegerField(help_text='ID do animal no modelo principal')),
                ('historico_medico_encrypted', models.TextField(blank=True, help_text='Histórico médico completo do animal (criptografado)', null=True)),
                ('observacoes_veterinario_encrypted', models.TextField(blank=True, help_text='Observações do veterinário (criptografado)', null=True)),
                ('medicamentos_atuais_encrypted', models.TextField(blank=True, help_text='Lista de medicamentos atuais (criptografado)', null=True)),
                ('alergias_encrypted', models.TextField(blank=True, help_text='Alergias conhecidas do animal (criptografado)', null=True)),
                ('condicoes_especiais_encrypted', models.TextField(blank=True, help_text='Condições especiais de saúde (criptografado)', null=True)),
                ('consent_given_at', models.DateTimeField(blank=True, null=True)),
                ('consent_given_by', models.CharField(blank=True, max_length=255)),
                ('veterinario_responsavel', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_accessed_at', models.DateTimeField(blank=True, null=True)),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('tenant', models.ForeignKey(blank=True, help_text='Tenant ao qual este registro pertence', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='tenants.tenant', verbose_name='Tenant')),
            ],
            options={
                'verbose_name': 'Dados Médicos Criptografados do Animal',
                'verbose_name_plural': 'Dados Médicos Criptografados dos Animais',
                'db_table': 'encrypted_animal_data',
                'unique_together': {('tenant', 'animal_id')},
            },
            bases=(models.Model, tenants.encrypted_fields.EncryptedModelMixin, tenants.encrypted_fields.ConsentTrackingMixin),
        ),
        migrations.CreateModel(
            name='EncryptedClienteData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cliente_id', models.IntegerField(help_text='ID do cliente no modelo principal')),
                ('cpf_encrypted', models.TextField(blank=True, help_text='CPF do cliente (criptografado)', null=True)),
                ('rg_encrypted', models.TextField(blank=True, help_text='RG do cliente (criptografado)', null=True)),
                ('endereco_completo_encrypted', models.TextField(blank=True, help_text='Endereço completo do cliente (criptografado)', null=True)),
                ('observacoes_pessoais_encrypted', models.TextField(blank=True, help_text='Observações pessoais sobre o cliente (criptografado)', null=True)),
                ('dados_bancarios_encrypted', models.TextField(blank=True, help_text='Dados bancários do cliente (criptografado)', null=True)),
                ('consent_given_at', models.DateTimeField(blank=True, null=True)),
                ('consent_given_by', models.CharField(blank=True, max_length=255)),
                ('consent_type', models.CharField(choices=[('explicit', 'Explícito'), ('implicit', 'Implícito'), ('legitimate', 'Interesse Legítimo')], default='explicit', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_accessed_at', models.DateTimeField(blank=True, null=True)),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('tenant', models.ForeignKey(blank=True, help_text='Tenant ao qual este registro pertence', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='tenants.tenant', verbose_name='Tenant')),
            ],
            options={
                'verbose_name': 'Dados Criptografados do Cliente',
                'verbose_name_plural': 'Dados Criptografados dos Clientes',
                'db_table': 'encrypted_cliente_data',
                'unique_together': {('tenant', 'cliente_id')},
            },
            bases=(models.Model, tenants.encrypted_fields.EncryptedModelMixin, tenants.encrypted_fields.ConsentTrackingMixin),
        ),
    ]
