# Generated by Django 5.2.3 on 2025-07-15 20:59

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nome do Petshop')),
                ('subdomain', models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message='Subdomínio deve conter apenas letras minúsculas, números e hífens.', regex='^[a-z0-9-]+$')], verbose_name='Subdomínio')),
                ('schema_name', models.CharField(max_length=63, unique=True, validators=[django.core.validators.RegexValidator(message='Nome do schema deve conter apenas letras minúsculas, números e underscores.', regex='^[a-z0-9_]+$')], verbose_name='Nome do Schema')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('plan_type', models.CharField(choices=[('basic', 'Básico'), ('premium', 'Premium'), ('enterprise', 'Enterprise')], default='basic', max_length=50, verbose_name='Tipo do Plano')),
                ('max_users', models.IntegerField(default=10, verbose_name='Máximo de Usuários')),
                ('max_animals', models.IntegerField(default=1000, verbose_name='Máximo de Animais')),
            ],
            options={
                'verbose_name': 'Tenant',
                'verbose_name_plural': 'Tenants',
                'db_table': 'tenants',
            },
        ),
        migrations.CreateModel(
            name='TenantConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('config_key', models.CharField(max_length=100, verbose_name='Chave de Configuração')),
                ('config_value', models.TextField(blank=True, verbose_name='Valor da Configuração')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configurations', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Configuração do Tenant',
                'verbose_name_plural': 'Configurações do Tenant',
                'db_table': 'tenant_configurations',
                'unique_together': {('tenant', 'config_key')},
            },
        ),
        migrations.CreateModel(
            name='TenantUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('password_hash', models.CharField(max_length=255, verbose_name='Hash da Senha')),
                ('first_name', models.CharField(blank=True, max_length=100, verbose_name='Primeiro Nome')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Último Nome')),
                ('role', models.CharField(choices=[('admin', 'Administrador'), ('manager', 'Gerente'), ('user', 'Usuário'), ('viewer', 'Visualizador')], default='user', max_length=50, verbose_name='Função')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='Último Login')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Usuário do Tenant',
                'verbose_name_plural': 'Usuários do Tenant',
                'db_table': 'tenant_users',
                'unique_together': {('tenant', 'email')},
            },
        ),
    ]
